type ItemDTO {
    title: String
    price: Int
    category: String
}

type ItemCategoryDTO{
    title: String
}

type ItemCategoryDTO2{
    title: String,
    itemDetailCategories: [ItemDetailCategory]
}

type ItemDetailCategory{
    title: String,
    items: [Item]
}

type Item{
    title: String
    content: String
    summary: String
    price: Int
    sellCnt: Int
    wishCnt: Int
    clickCnt: Int
    avgReview: Float
    reviewCnt: Int
    qnaCnt: Int
    status: Boolean
    imageId: [String]
}

type Image {
    fileName: String
    fileOriginName: String
    size: Int
    type: String
    fileUrl: String
}

type Query {
#    getItemByTitle(title: String): ItemDTO
    findCategoryByTitle(title: String): ItemCategoryDTO2
    getItemCategoriesContainsTitle(title: String): [ItemCategoryDTO2]
    getItemsContainsTitle(title: String): [ItemDTO]

}

type Mutation {
    createItem(request: ItemCreateRequest): ItemCategoryDTO
    createCategory(request: CategoryCreateRequest): ItemCategoryDTO
    createDetailCategory(request: DetailCategoryCreateRequest): ItemCategoryDTO
}

input CategoryCreateRequest {
    title: String
}

input DetailCategoryCreateRequest {
    title: String
    categoryTitle: String
}

input ItemCreateRequest {
    title: String
    content: String
    summary: String
    price: Int
    sellCnt: Int
    wishCnt: Int
    clickCnt: Int
    avgReview: Float
    reviewCnt: Int
    qnaCnt: Int
    status: Boolean
    userId: String
    categoryTitle: String
    detailCategoryTitle: String
    imageId: [String]
}
