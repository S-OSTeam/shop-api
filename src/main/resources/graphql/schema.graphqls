type ItemResponseDTO {
    title: String
    content: String
    summary: String
    sellCnt: Int
    wishCnt: Int
    clickCnt: Int
    avgReview: Float
    reviewCnt: Int
    qnaCnt: Int
    status: Boolean
    images: [String]
#    account: Account
    account: String
}

type ItemCategoryResponseDTO{
    title: String,
    itemDetailCategories: [ItemDetailCategory]
}

type ItemDetailCategoryResponseDTO{
    title: String
    itemIdList: [String]
}

type ItemDetailCategory{
    title: String,
    itemIdList: [String]
}

#type Item{
#    title: String
#    content: String
#    summary: String
#    price: Int
#    sellCnt: Int
#    wishCnt: Int
#    clickCnt: Int
#    avgReview: Float
#    reviewCnt: Int
#    qnaCnt: Int
#    status: Boolean
#    imageId: [String]
#}

type Image {
    fileName: String
    fileOriginName: String
    size: Int
    type: String
    fileUrl: String
}

type Query {
    findCategoryByTitle(title: String): ItemCategoryResponseDTO
    getItemCategoriesContainsTitle(title: String): [ItemCategoryResponseDTO]
    getItemDetailCategoryByTitle(title: String): ItemDetailCategoryResponseDTO

#    getItemsContainsTitle(title: String): [ItemDTO]
#    getItemsByOption(categoryTitle: String, detailTitle: String, itemTitle: String): [ItemDTO]
}

type Mutation {
    createCategory(request: CategoryRequestDTO): ItemCategoryResponseDTO
    createDetailCategory(request: DetailCategoryRequestDTO): ItemCategoryResponseDTO
    createItem(request: ItemRequest): ItemResponseDTO

    deleteCategory(id: String): Boolean
}

input CategoryRequestDTO {
    title: String
}

input DetailCategoryRequestDTO {
    title: String
    categoryTitle: String
}

input ItemRequest {
    title: String
    content: String
    summary: String
    price: Int
    sellCnt: Int
    wishCnt: Int
    clickCnt: Int
    avgReview: Float
    reviewCnt: Int
    qnaCnt: Int
    status: Boolean
    userId: String
    categoryTitle: String
    detailCategoryTitle: String
    imageId: [String]
}
